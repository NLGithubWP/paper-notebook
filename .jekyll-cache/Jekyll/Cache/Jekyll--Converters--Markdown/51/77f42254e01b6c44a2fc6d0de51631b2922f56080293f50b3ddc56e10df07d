I"—<p>This is a summary of</p>

<p>https://knative.dev/docs/serving/</p>

<p>https://www.ibm.com/cloud/learn/knative</p>

<p>https://www.ibm.com/cloud/blog/istio-and-knative-extending-kubernetes-for-a-new-developer-experience</p>

<p>https://haralduebele.github.io/2020/06/10/serverless-and-knative-part-3-knative-eventing/</p>

<h1 id="introduction">Introduction</h1>

<p>Knative uses Kubernetes as a container manager. Istio as network routing manager, and also propose <strong>Build, Eventing, Serving</strong>.</p>

<h2 id="build">Build:</h2>

<p>CI/CD</p>

<p>automates the process of turning source code into a container</p>

<h2 id="evening">Evening</h2>

<p>Eventing is implemented by using a message queue like Kafka.</p>

<p>The Eventing component of Knative enables different events to trigger their container-based services and functions</p>

<h2 id="knative-serving">Knative Serving</h2>

<p>Provides:</p>

<ol>
  <li>fast deployment container</li>
  <li>autoscaling: Knative provides automatic scaling to match incoming demands. This is provided using Knative Pod Autoscaler. (KPA)</li>
  <li>support multiple networking layers</li>
  <li>snapshots of deployed code/configurations.</li>
</ol>

<p>Resources:</p>

<ol>
  <li>
    <p>service: Manage the whole lifecycle of the workload. It creates objects to ensure each app has a route, cfgs, and revisions for each update.</p>
  </li>
  <li>Route: Map a network endpoint to one or more revisions.</li>
  <li>cfgs</li>
  <li>Revision: A snapshot of code and cfgs.</li>
</ol>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220614144731362.png" alt="image-20220614144731362" /></p>

:ET