I"Ö<p>https://distill.pub/2021/gnn-intro/</p>

<h1 id="introduction">Introduction</h1>

<h2 id="usage">Usage</h2>

<p>GNN can be used in fake news detection, traffic prediction, and recommendation systems, physics simulations.</p>

<h2 id="contributions">Contributions</h2>

<p>The paper mainly introduces 3 parts</p>

<ol>
  <li>What kinds of data are most naturally phrased as a graph.</li>
  <li>What makes graphs different from other types of data.</li>
  <li>GNN models architecture.</li>
</ol>

<h2 id="graph">Graph</h2>

<p>V Node, E Edge, U Global.</p>

<h2 id="data-as-graphs">data as Graphs</h2>

<h3 id="img-to-graph">Img to graph</h3>

<p>Each pixel in the image can be a node, and connect to other nodes via an edge.</p>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509225405041.png" alt="image-20220509225405041" /></p>

<h3 id="text-to-graph">Text to graph</h3>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509225525554.png" alt="image-20220509225525554" /></p>

<h3 id="social-network-to-graph">Social network to Graph</h3>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509230018695.png" alt="image-20220509230018695" /></p>

<h1 id="problems-in-graph-data">Problems in Graph data</h1>

<p>Node classification, link prediction, and clustering.</p>

<h3 id="graph-level">graph level</h3>

<p>Predict which graph has a specific property. Graph classification</p>

<h3 id="node-level">Node-level</h3>

<p>Predict which party the node belongs to.</p>

<h3 id="edge-level">Edge-level</h3>

<p>Find the relation between two nodes.</p>

<h1 id="ml-for-graph">ML for Graph</h1>

<p><strong>Represent graph to be compatible with NN.</strong></p>

<ol>
  <li>The graph has nodes, edges, global context, and connectivity.</li>
  <li>Different forms of graphs must be recognized as the same inputs.</li>
</ol>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509231010346.png" alt="image-20220509231010346" /></p>

<h2 id="gnn">GNN</h2>

<ol>
  <li>
    <p><strong>A GNN is an optimizable transformation on all attributes of the graph (nodes, edges, global context) that preserves graph symmetries (permutation invariances)</strong></p>
  </li>
  <li>Build with Message passing</li>
  <li>Adopt a graph as input, and produce an output graph. The <strong>connectivity</strong> of the input graph will not be changed.</li>
</ol>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509231430353.png" alt="image-20220509231430353" /></p>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509232315796.png" alt="image-20220509232315796" /></p>

<p>In prediction, apply a linear classifier to each node. All nodes will share the weight of the classifier.</p>

<p><strong>Pooling</strong></p>

<p>If a node has no embedding, we could generate an embedding for it by adding all edge‚Äôs embeddings around it.</p>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509232707972.png" alt="image-20220509232707972" /></p>

<p>We cloud also add node‚Äôs embeddings to generate embeddings of one edge.</p>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509232915763.png" alt="image-20220509232915763" /></p>

<h2 id="passing-message">Passing message</h2>

<p>SImple GNN only considers the information of nodes and edges separately.</p>

<p>‚ÄúPassing message‚Äù can take the information of connectivity into consideration.</p>

<ol>
  <li>
    <p>Edges to nodes</p>
  </li>
  <li>
    <p>nodes to edges</p>
  </li>
</ol>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509233247174.png" alt="image-20220509233247174" /></p>

<h2 id="global-representations-u">Global representations. U</h2>

<p>Add a master node or virtual node, which connects all nodes and edges.</p>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509234008576.png" alt="image-20220509234008576" /></p>

<h1 id="performance">Performance</h1>

<p>Passing message in the whole graph has the best AUC.</p>

<p><img src="https://github.com/NLGithubWP/tech-notebook/raw/master/img/a_img_store/image-20220509235100502.png" alt="image-20220509235100502" /></p>

<h1 id="problems">Problems</h1>

<ol>
  <li>GNN/GCN has a large network, and it‚Äôs hard to optimize the computation. As a result, it‚Äôs hard to compute in CPU/GPU.</li>
  <li>GNN/GCN is sensitive to hyperparameters, sample methods etc.</li>
</ol>

:ET